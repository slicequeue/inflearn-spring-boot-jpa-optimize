server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: 'spring-boot-boilerplate-api'
  profiles:
    active: local

  config:
    import: classpath:extra.yml

  jpa:
    hibernate:
      ddl-auto: update
    generate-ddl: true
    properties:
      hibernate:
        show-sql: true
        format_sql: false
        default_batch_fetch_size: 100 # batch_fetch_size 기본값 지정! 1:N 관계에서 페이징시 한계 돌파 형태 N 연관관계 in 절 미리 조회해서 쟁여둠!, 단! 전체 설정!


  datasource:
    generate-unique-name: false
    driver-class-name: org.h2.Driver
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASS}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:1}

  h2:
    console:
      enabled: true
      path: /h2-console


# 로그 설정
logging:
  config:
    classpath: logback.xml
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace


management:
  endpoints:
    web:
      exposure:
        include: health, httptrace, info, metrics, prometheus
  metrics:
    tags:
      application: ${spring.application.name}    # Prometheus label name
